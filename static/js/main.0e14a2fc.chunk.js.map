{"version":3,"sources":["Components/Sub/HomeCategories.js","Components/Sub/HomeIntro.js","Components/Sub/HomeRC.js","Components/Sub/HomeRP.js","Components/Home.js","Components/Nav.js","Components/Footer.js","Components/useFetch.js","Components/Sub/InfoMainData.js","Components/Sub/InfoMainEvo.js","Components/Sub/InfoMainEvoChain.js","Components/Sub/InfoMain.js","Components/Sub/InfoMovesButtons.js","Components/Sub/InfoMovesDisplay.js","Components/Sub/InfoMovesList.js","Components/Sub/InfoMovesContainer.js","Components/Sub/InfoMoves.js","Components/Sub/InfoSecondary.js","Components/Sub/InfoDisplay.js","Components/Info.js","Components/Random.js","Components/Sub/SortAlphabeticallyDisplay.js","Components/SortAlphabetically.js","App.js","reportWebVitals.js","index.js"],"names":["HomeCategories","id","className","to","src","alt","HomeIntro","href","HomeRC","HomeRP","Home","Nav","exact","activeClassName","Footer","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","mode","then","res","ok","Error","json","catch","err","name","console","log","message","abort","InfoMainData","pokeData","statNames","fixTitle","title","splitString","toLowerCase","split","toUpperCase","i","length","join","species","types","map","type","index","sprites","stats","stat","Math","floor","InfoMainEvo","InfoMainEvoChain","evoData","evoChainNames","chain","forEach","evo","evoChain","evoChain2","evo2","push","urlGroup","Array","isArray","url2nd","index2nd","InfoMain","speciesData","initialEvo","InfoMovesButtons","setCurrentGeneration","generations","getVersion","ver","versionToFind","includes","version","confirmVersions","onClick","newVer","InfoMovesDisplay","genName","moveList","move","InfoMovesList","currentGenGames","gen","confirmGenMoves","generationName","moves","moveType","setMoveType","sortedLevels","n","sortLevels","generation","InfoMovesContainer","currentGeneration","InfoMoves","InfoSecondary","String","height","weight","egg","InfoDisplay","Info","useParams","speciesIsPending","speciesError","withRouter","random","SortAlphabeticallyDisplay","sortedPokemon","currentLetter","getLink","pokemon","SortAlphabetically","setCurrentLetter","alphabet","from","e","x","fromCharCode","alpha","letter","results","charAt","sortAlphabetically","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e14a2fc.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst HomeCategories = () => {\r\n    return (\r\n        <div id='home-categories'>\r\n            <div className='container content-container'>\r\n                <div id='home-categories-list-container' className='content'>\r\n                    <h4 className='padding-bottom-20'>Categories</h4>\r\n                    <ul id='home-categories-list' className='flex'>\r\n                        <li><Link to='/pokedex/sort/alphabetically'><img src='#' alt='' /></Link><Link to='/pokedex/sort/alphabetically'>Alphabetically</Link></li>\r\n                        <li><Link to='#'><img src='#' alt='' /></Link><Link to='#'>Numerically</Link></li>\r\n                        <li><Link to='#'><img src='#' alt='' /></Link><Link to='#'>Generations</Link></li>\r\n                        <li><Link to='#'><img src='#' alt='' /></Link><Link to='#'>Types</Link></li>\r\n                        <li><Link to='#'><img src='#' alt='' /></Link><Link to='#'>Moves</Link></li>\r\n                        <li><Link to='#'><img src='#' alt='' /></Link><Link to='#'>Abilities</Link></li>\r\n                        <li><Link to='#'><img src='#' alt='' /></Link><Link to='#'>Legendaries</Link></li>\r\n                        <li><Link to='#'><img src='#' alt='' /></Link><Link to='#'>Weight</Link></li>\r\n                        <li id='home-categories-list-last'><Link to='#'><img src='#' alt='' /></Link><Link to='#'>Height</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default HomeCategories;","const HomeIntro = () => {\r\n    return (\r\n        <div id='home-intro'>\r\n            <div className='container content-container'>\r\n                <div className='content'>\r\n                    <h4 className='padding-bottom-20'>Welcome to Pokedex</h4>\r\n                    <p className='padding-bottom-20'>A wiki containing various data of Pokemon up to, and including, the 5th generation.\r\n                        Data includes such as stats, abilities, moves, evolutions, and more. There are\r\n                        various sorting and searching mechanics, such as finding and sorting through Pokemon based on\r\n                        type, move, ability, or status as a legendary among others.\r\n                    </p>\r\n                    <p>This website was created using React.js by <a href='https://github.com/iMeece'>iMeece</a>.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default HomeIntro;\r\n","const HomeRC = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default HomeRC;","const HomeRP = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default HomeRP;","import HomeCategories from \"./Sub/HomeCategories\";\r\nimport HomeIntro from \"./Sub/HomeIntro\";\r\nimport HomeRC from \"./Sub/HomeRC\";\r\nimport HomeRP from \"./Sub/HomeRP\";\r\n// import useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n\r\n    // const { data, isPending, error } = useFetch('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=20');\r\n\r\n    return (\r\n        <div id='home'>\r\n            <HomeIntro />\r\n            <HomeCategories />\r\n\r\n            {/* Random Data displayed */}\r\n            <div className='flex'>\r\n                <HomeRC />\r\n                <HomeRC />\r\n            </div>\r\n\r\n            {/* Random Pokemon displayed */}\r\n            <HomeRP />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;","import { NavLink } from \"react-router-dom\";\r\nimport '../nav.css'\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <div id='nav'>\r\n            <div id='nav-container' className='container flex'>\r\n                {/* Logo */}\r\n                <div id='nav-logo-container'>\r\n                    <img src='' alt='logo'/>\r\n                </div>\r\n\r\n                {/* Title & Nav */}\r\n                <div id='nav-info-container' className='flex'>\r\n                    <div id='nav-title' className='flex'>\r\n                        <h3>Pokedex</h3>\r\n                        <h6>- a wikipedia for Pokemon</h6>\r\n                    </div>\r\n                    \r\n                    <div id='nav-links-container'>\r\n                        <ul id='nav-links' className='flex'>\r\n                            <li><NavLink to='/pokedex' exact activeClassName='nav-highlight'><div>Home</div></NavLink></li>\r\n                            <li><NavLink to='/stats' activeClassName='nav-highlight'><div>Stats</div></NavLink></li>\r\n                            <li><NavLink to='/random'><div>Random</div></NavLink></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Nav;","const Footer = () => {\r\n    return (\r\n        <div id='footer'>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Footer;","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n\r\n        fetch(url, { signal: abortCont.signal, mode:\"cors\" } )\r\n        .then(res => {\r\n            if(!res.ok) {\r\n                throw Error('Could not fetch data for that resource');\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setIsPending(false);\r\n            setError(null);\r\n            setData(data);\r\n        })\r\n        .catch(err => {\r\n            if (err.name === 'AbortError') {\r\n                console.log('Fetch Aborted');\r\n            }\r\n            setIsPending(false);\r\n            setError(err.message);\r\n        })\r\n\r\n        return () => abortCont.abort();\r\n    }, [url]);\r\n\r\n    return { data, isPending, error };\r\n}\r\n \r\nexport default useFetch;","\r\n\r\nconst InfoMainData = ({ pokeData }) => {\r\n\r\n    const statNames = ['Health', 'Attack', 'Defense', 'Sp.Atk', 'Sp.Def', 'Speed'];\r\n\r\n    function fixTitle(title) {\r\n        let splitString = title.toLowerCase().split('');\r\n        splitString[0] = splitString[0].toUpperCase();\r\n        for (let i = 0; i < splitString.length; i++) {\r\n            if (splitString[i] === '-' && splitString.length !== i) {\r\n                splitString[i + 1] = splitString[i + 1].toUpperCase();\r\n            };\r\n        };\r\n        return splitString.join('');\r\n    }\r\n\r\n    return (\r\n        <div id='info-main-data'>\r\n            <div id='info-main-name-container' className='flex'>\r\n                <div id='info-main-name'>\r\n                    <h3>{ fixTitle(pokeData.species.name) }</h3>\r\n                </div>\r\n                <div id='info-main-type-container' className='flex'>\r\n                    { pokeData.types.map((type, index) => (\r\n                        <div className='info-main-type' key={ 'type-' + index }>{ fixTitle(type.type.name) }</div>\r\n                    )) }\r\n                    {pokeData.types.length === 1 && <div className='info-main-type-placeholder' ></div>}\r\n                </div>\r\n            </div>\r\n            <div id='info-main-stats-container' className='flex'>\r\n                <div id='info-main-img'>\r\n                    <img src={ pokeData.sprites['front_default'] } alt='sprite' />\r\n                </div>\r\n                <div id='info-main-stats'>\r\n                    { pokeData.stats.map((stat, index) => (\r\n                        <div className='info-main-stat-container flex' key={ 'stat-' + index }>\r\n                            <div className='info-main-stat-name'>{ statNames[index] + ':' }</div>\r\n                            <div className='info-main-stat-number'>{ stat['base_stat'] }</div>\r\n                            <div className={'info-main-stat-base info-main-stat-' + (Math.floor(stat['base_stat']/10))*10}></div>\r\n                        </div>\r\n                    )) }\r\n                </div>\r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n \r\nexport default InfoMainData;","import { Link } from \"react-router-dom\";\r\nimport useFetch from \"../useFetch\";\r\n\r\nconst InfoMainEvo = ({ name }) => {\r\n\r\n    const { data: pokeData } = useFetch('https://pokeapi.co/api/v2/pokemon/' + name);\r\n\r\n    return (\r\n        <div className='info-main-evo-img'>\r\n            { pokeData &&\r\n                <Link to={ '/pokedex/pokemon/' + name }><img src={ pokeData.sprites['front_default'] } alt='sprite' /></Link>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoMainEvo;","import InfoMainEvo from \"./InfoMainEvo\";\r\n\r\nconst InfoMainEvoChain = ({ evoData }) => {\r\n\r\n    let evoChainNames = [];\r\n\r\n    function appendNamesToEvoChain() {\r\n        evoData.chain['evolves_to'].forEach(evo => {\r\n            let evoChain = [];\r\n            let evoChain2 = [];\r\n\r\n            if (evo['evolves_to'].length !== 0) {\r\n                evo['evolves_to'].forEach(evo2 => {\r\n                    evoChain2.push(evo2.species.name);\r\n                });\r\n            };\r\n\r\n            evoChain.push(evo.species.name);\r\n            evoChain.push(evoChain2);\r\n\r\n            evoChainNames.push(evoChain);\r\n        });\r\n    }\r\n\r\n    appendNamesToEvoChain();\r\n\r\n    return (\r\n        <div className='evo-chain-container'>\r\n            { evoChainNames.map((urlGroup, index) => (\r\n                <div className='flex' key={'evo-chain-' + index}>\r\n                    {urlGroup.map((url, index) => (\r\n                        <div key={'evo-' + index }>\r\n                            { url.length > 1 && Array.isArray(url) &&\r\n                                url.map((url2nd, index2nd) => (\r\n                                    <InfoMainEvo name={ url2nd } key={'evo2nd-' + index2nd} />\r\n                                ))\r\n                            }\r\n                            { url.length === 1 && <InfoMainEvo name={ url } /> }\r\n                            { !Array.isArray(url) && <InfoMainEvo name={ url } />}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )) }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoMainEvoChain;","import InfoMainData from \"./InfoMainData\";\r\nimport InfoMainEvo from \"./InfoMainEvo\";\r\nimport InfoMainEvoChain from \"./InfoMainEvoChain\";\r\n\r\nconst InfoMain = ({ pokeData, speciesData, evoData }) => {\r\n\r\n    const initialEvo =evoData.chain.species.name;\r\n\r\n    return (\r\n        <div id='info-main'>\r\n            <div className='container content-container'>\r\n                <div className='content'>\r\n                    <InfoMainData pokeData={ pokeData } />\r\n                    <div id='info-evolution' className='flex'>\r\n                        <InfoMainEvo name={ initialEvo } />\r\n                        <InfoMainEvoChain evoData={ evoData } />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoMain;","const InfoMovesButtons = ({ pokeData, setCurrentGeneration }) => {\r\n\r\n    let generations = [];\r\n\r\n    function changeGeneration(newVer) {\r\n        if (newVer === 'Gen I') setCurrentGeneration(1)\r\n        else if (newVer === 'Gen II') setCurrentGeneration(2)\r\n        else if (newVer === 'Gen III') setCurrentGeneration(3)\r\n        else if (newVer === 'Gen IV') setCurrentGeneration(4)\r\n        else if (newVer === 'Gen V') setCurrentGeneration(5);\r\n    }\r\n    \r\n    function getVersion(ver) {\r\n        if (ver === 'yellow') return 'Gen I'\r\n        else if (ver === 'crystal') return 'Gen II';\r\n        else if (ver === 'emerald') return 'Gen III';\r\n        else if (ver === 'platinum') return 'Gen IV';\r\n        else if (ver === 'black-2') return 'Gen V';\r\n    }\r\n\r\n    function confirmVersions() {\r\n\r\n        const versionToFind = ['yellow', 'crystal', 'emerald', 'platinum', 'black-2']\r\n\r\n        pokeData['game_indices'].forEach(ver => {\r\n            if (versionToFind.includes(ver.version.name)) {\r\n                generations.push(ver.version.name);\r\n            }\r\n        });\r\n    }\r\n\r\n    confirmVersions();\r\n\r\n    return (\r\n        <div id='info-moves-generations-container' className='flex'>\r\n            { generations.map((ver, index) => (\r\n                <div key={'game-ver' + index + '-' + pokeData.id}>\r\n                    <button className='info-gen-button' onClick={ () => changeGeneration(getVersion(ver)) }>{ getVersion(ver) }</button>\r\n                </div>\r\n            )) }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoMovesButtons;","const InfoMovesDisplay = ({ genName, moveList }) => {\r\n\r\n    function fixTitle(title) {\r\n        let splitString = title.toLowerCase().split('');\r\n        splitString[0] = splitString[0].toUpperCase();\r\n        for (let i = 0; i < splitString.length; i++) {\r\n            if (splitString[i] === '-' && splitString.length !== i) {\r\n                splitString[i + 1] = splitString[i + 1].toUpperCase();\r\n            };\r\n        };\r\n        return splitString.join('');\r\n    }\r\n\r\n    return (\r\n        <div className='info-moves-display'>\r\n            <div className='info-moves-display-gen-title'>\r\n                {\r\n                    (moveList[0].length !== 0 || moveList[1].length !== 0 || moveList[2].length !== 0 ||\r\n                    moveList[3].length !== 0) && <h3>{ fixTitle(genName) }</h3>\r\n                }\r\n            </div>\r\n\r\n            <div className='info-moves-display-move-container'>\r\n                {moveList[0].length !== 0 && <h5>Level Moves</h5>}\r\n                <div className='info-moves-display-list'>\r\n                    {moveList[0].map((move, index) => (\r\n                        <div className='info-moves-display-move flex' key={'level-move' + genName + '-' + index}>\r\n                            <div className='info-moves-display-level'>{move[1]}</div>\r\n                            <div className='info-moves-display-level-title'>{fixTitle(move[0])}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className='info-moves-display-move-container'>\r\n                {moveList[1].length !== 0 && <h5>Egg Moves</h5>}\r\n                <div className='info-moves-display-list'>\r\n                    {moveList[1].map((move, index) => (\r\n                        <div className='info-moves-display-move'  key={'egg-move' + genName + '-' + index}>\r\n                            {fixTitle(move)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className='info-moves-display-move-container'>\r\n                {moveList[2].length !== 0 && <h5>Machine Moves</h5>}\r\n                <div className='info-moves-display-list'>\r\n                    {moveList[2].map((move, index) => (\r\n                        <div className='info-moves-display-move'  key={'machine-move' + genName + '-' + index}>\r\n                            {fixTitle(move)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className='info-moves-display-move-container'>\r\n                {moveList[3].length !== 0 && <h5>Tutor Moves</h5>}\r\n                <div className='info-moves-display-list'>\r\n                    {moveList[3].map((move, index) => (\r\n                        <div className='info-moves-display-move'  key={'tutor-move' + genName + '-' + index}>\r\n                            {fixTitle(move)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoMovesDisplay;","import InfoMovesDisplay from \"./InfoMovesDisplay\";\r\n\r\nconst InfoMovesList = ({ pokeData, gen }) => {\r\n\r\n    let currentGenGames;\r\n\r\n    function setCurrentGenGames() {\r\n        if (gen === 1) currentGenGames = ['red-blue', 'yellow']\r\n        else if (gen === 2) currentGenGames = ['gold-silver', 'crystal']\r\n        else if (gen === 3) currentGenGames = ['ruby-sapphire', 'emerald', 'firered-leafgreen']\r\n        else if (gen === 4) currentGenGames = ['diamond-pearl', 'platinum', 'heartgold-soulsilver']\r\n        else if (gen === 5) currentGenGames = ['black-white', 'black-2-white-2'];\r\n    }\r\n\r\n    function setMoveType(moveType, move, index, moveList) {\r\n        if (moveType === 'level-up') {\r\n            moveList[0].push([move.move.name, move['version_group_details'][index]['level_learned_at']]);\r\n        }\r\n        else if (moveType === 'egg') {\r\n            moveList[1].push(move.move.name);\r\n        }\r\n        else if (moveType === 'machine') {\r\n            moveList[2].push(move.move.name);\r\n        }\r\n        else if (moveType === 'tutor') {\r\n            moveList[3].push(move.move.name);\r\n        };\r\n    }\r\n\r\n    function sortLevels(moveList) {\r\n        let sortedLevels = [];\r\n\r\n        for (let i = 0; i < 100; i++) {\r\n            for (let n = 0; n < moveList[0].length; n++) {\r\n                if (moveList[0][n][1] === i) {\r\n                    sortedLevels.push(moveList[0][n]);\r\n                };\r\n            }\r\n        }\r\n\r\n        moveList[0] = sortedLevels;\r\n    \r\n        return moveList;\r\n    }\r\n\r\n    function confirmGenMoves(generationName) {\r\n        let levelMoves = [];\r\n        let eggMoves = [];\r\n        let machineMoves = [];\r\n        let tutorMoves = [];\r\n\r\n        const moveList = [levelMoves, eggMoves, machineMoves, tutorMoves];\r\n\r\n        pokeData.moves.forEach(move => {\r\n            move['version_group_details'].forEach((ver, index) => {\r\n                if (ver['version_group'].name === generationName) {\r\n                    setMoveType(ver['move_learn_method'].name, move, index, moveList);\r\n                }\r\n            })\r\n        })\r\n\r\n        return sortLevels(moveList);\r\n    }\r\n\r\n    setCurrentGenGames();\r\n\r\n    return (\r\n        <div>\r\n            {currentGenGames.map((generation, index) => (\r\n                <div key={'move-display-' + pokeData.id + '-' + index}>\r\n                    <InfoMovesDisplay genName={ generation } moveList={ confirmGenMoves(generation) }/>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoMovesList;","import InfoMovesList from \"./InfoMovesList\";\r\n\r\nconst InfoMovesContainer = ({ pokeData, currentGeneration }) => {\r\n    return (\r\n        <div id='info-moves-container'>\r\n            { currentGeneration === 1 && <InfoMovesList pokeData={ pokeData } gen={ currentGeneration }/>}\r\n            { currentGeneration === 2 && <InfoMovesList pokeData={ pokeData } gen={ currentGeneration }/>}\r\n            { currentGeneration === 3 && <InfoMovesList pokeData={ pokeData } gen={ currentGeneration }/>}\r\n            { currentGeneration === 4 && <InfoMovesList pokeData={ pokeData } gen={ currentGeneration }/>}\r\n            { currentGeneration === 5 && <InfoMovesList pokeData={ pokeData } gen={ currentGeneration }/>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoMovesContainer;","import { useState } from \"react\";\r\nimport InfoMovesButtons from \"./InfoMovesButtons\";\r\nimport InfoMovesContainer from \"./InfoMovesContainer\";\r\n\r\nconst InfoMoves = ({ pokeData }) => {\r\n\r\n    const [currentGeneration, setCurrentGeneration] = useState(5);\r\n    \r\n    return (\r\n        <div id='info-moves'>\r\n            <div className='container content-container'>\r\n                <div className='content'>\r\n                    <InfoMovesButtons pokeData={ pokeData } setCurrentGeneration={ setCurrentGeneration }/>\r\n                    <InfoMovesContainer pokeData={ pokeData } currentGeneration={ currentGeneration }/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoMoves;","const InfoSecondary = ({ pokeData, speciesData }) => {\r\n\r\n    function fixTitle(title) {\r\n        let splitString = title.toLowerCase().split('');\r\n        splitString[0] = splitString[0].toUpperCase();\r\n        for (let i = 0; i < splitString.length; i++) {\r\n            if (splitString[i] === '-' && splitString.length !== i) {\r\n                splitString[i + 1] = splitString[i + 1].toUpperCase();\r\n            };\r\n        };\r\n        return splitString.join('');\r\n    }\r\n\r\n    function getEggGroupTitle() {\r\n        if (speciesData['egg_groups'].length === 1) {\r\n            return 'Egg Group: ';\r\n        } else return 'Egg Groups: '\r\n    }\r\n\r\n    function getHeight() {\r\n        return String(pokeData.height / 10) + 'm';\r\n    }\r\n\r\n    function getWeight() {\r\n        return String(pokeData.weight / 10) + 'kg';\r\n    }\r\n\r\n    function getNationalDexNumber() {\r\n        if (pokeData.id < 10) {\r\n            return '00' + String(pokeData.id);\r\n        }\r\n        else if (pokeData.id < 100) {\r\n            return '0' + String(pokeData.id);\r\n        }\r\n        else {\r\n            return String(pokeData.id);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='info-secondary'>\r\n            <div className='container content-container'>\r\n                <div className='content'>\r\n                    <div className='info-secondary-container padding-bottom-20'>\r\n                        <div>National Dex: { getNationalDexNumber() }</div>\r\n                    </div>\r\n                    <div className='flex info-secondary-container padding-bottom-20'>\r\n                        <div className='info-secondary-first-box'>Height: { getHeight() }</div>\r\n                        <div>Weight: { getWeight() }</div>\r\n                    </div>\r\n                    <div className='flex info-secondary-container padding-bottom-20'>\r\n                        <div className='info-secondary-first-box'>Capture Rate: { speciesData['capture_rate'] }</div>\r\n                        <div>Growth Rate: { fixTitle(speciesData['growth_rate'].name) }</div>\r\n                    </div>\r\n                    <div className='flex info-secondary-container'>\r\n                        <div className='flex info-secondary-first-box'>\r\n                            <div>{ getEggGroupTitle() }</div>\r\n                            <div className='flex'>\r\n                                {speciesData['egg_groups'].map((egg, index) => (\r\n                                    <div className='info-egg-type' key={'egg-' + index + '-' + pokeData.id}>{ fixTitle(egg.name) }</div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div>Hatch Counter: { speciesData['hatch_counter'] }</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoSecondary;","import useFetch from \"../useFetch\";\r\nimport InfoMain from \"./InfoMain\";\r\nimport InfoMoves from \"./InfoMoves\";\r\nimport InfoSecondary from \"./InfoSecondary\";\r\n\r\nconst InfoDisplay = ({ pokeData, speciesData, id }) => {\r\n\r\n    const { data: evoData, isPending, error } = useFetch(speciesData['evolution_chain'].url);\r\n\r\n    return (\r\n        <div>\r\n            {/* { pokeData && console.log(pokeData['game_indices'][0].version.name)} */}\r\n            { isPending && <div>Loading Data...</div> }\r\n            { error && <div>Failed to fetch Data</div> }\r\n            { evoData &&\r\n                <div>\r\n                    <InfoMain pokeData={ pokeData } speciesData={ speciesData } evoData={ evoData }/>\r\n                    <InfoSecondary pokeData={ pokeData } speciesData={ speciesData }/>\r\n                    <InfoMoves pokeData={ pokeData }/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default InfoDisplay;","import { useParams } from \"react-router\";\r\nimport InfoDisplay from \"./Sub/InfoDisplay\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Info = () => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const { data: pokeData, isPending, error } = useFetch('https://pokeapi.co/api/v2/pokemon/' + id);\r\n    const { data: speciesData, speciesIsPending, speciesError } = useFetch('https://pokeapi.co/api/v2/pokemon-species/' + id);\r\n\r\n    return (\r\n        <div id='info'>\r\n            { isPending && speciesIsPending && <div>Loading...</div> }\r\n            { error && speciesError && <div>Failed to fetch Data</div> }\r\n            { pokeData && speciesData && pokeData.id <= 649 && <InfoDisplay pokeData={ pokeData } speciesData={ speciesData } id={ id }/> }\r\n            { pokeData && speciesData && pokeData.id > 649 && <div>Failed to fetch Data</div>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Info;","import { Redirect, withRouter } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Random = () => {\r\n\r\n    const { data: pokeData, isPending, error } = useFetch('https://pokeapi.co/api/v2/pokemon/' + generateRandomCatchId());\r\n\r\n    function generateRandomCatchId() {\r\n        return Math.floor(Math.random() * 649);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { isPending && <div>Finding...</div> }\r\n            { error && <div>An Error has Occurred</div>}\r\n            { pokeData && <Redirect to={'/pokedex/pokemon/' + pokeData.species.name} /> }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default withRouter(Random);","import { Link } from \"react-router-dom\";\r\n\r\nconst SortAlphabeticallyDisplay = ({ sortedPokemon, currentLetter }) => {\r\n\r\n    function fixTitle(title) {\r\n        let splitString = title.toLowerCase().split('');\r\n        splitString[0] = splitString[0].toUpperCase();\r\n        for (let i = 0; i < splitString.length; i++) {\r\n            if (splitString[i] === '-' && splitString.length !== i) {\r\n                splitString[i + 1] = splitString[i + 1].toUpperCase();\r\n            };\r\n        };\r\n        return splitString.join('');\r\n    }\r\n\r\n    function getLink(pokemon) {\r\n        if (pokemon === 'giratina-altered') return 487;\r\n        else return pokemon;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { sortedPokemon.map((pokemon, index) => (\r\n                <Link to={'/pokedex/pokemon/' + getLink(pokemon)} key={ 'alphabetically-' + currentLetter + '-' + index }>\r\n                    {fixTitle(pokemon)}\r\n                </Link>\r\n            )) }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SortAlphabeticallyDisplay;","import { useState } from \"react\";\r\nimport SortAlphabeticallyDisplay from \"./Sub/SortAlphabeticallyDisplay\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst SortAlphabetically = () => {\r\n\r\n    const { data, isPending, error } = useFetch('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=649');\r\n    const [currentLetter, setCurrentLetter] = useState('A');\r\n    \r\n    const alphabet = createAlphabetArray();\r\n\r\n    function createAlphabetArray() {\r\n        const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n        return alpha.map((x) => String.fromCharCode(x));\r\n    }\r\n\r\n    function sortAlphabetically(letter) {\r\n\r\n        let sortedPokemon = [];\r\n        data.results.forEach(pokemon => {\r\n\r\n            const upperName = pokemon.name.toUpperCase();\r\n\r\n            if (upperName.charAt(0) === letter) {\r\n                sortedPokemon.push(pokemon.name);\r\n            };\r\n        });\r\n\r\n        return sortedPokemon;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className='flex'>\r\n                { alphabet.map((alpha) => (\r\n                    <div key={'alphabet' + alpha} onClick={ () => setCurrentLetter(alpha) }>{ alpha }</div>\r\n                )) }\r\n            </div>\r\n            <div>\r\n                { isPending && <div>Loading...</div> }\r\n                { error && <div>Error loading data</div> }\r\n                { data && <SortAlphabeticallyDisplay sortedPokemon={ sortAlphabetically(currentLetter) } currentLetter={ currentLetter }/>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default SortAlphabetically;","import './reset.css'\nimport './App.css';\nimport './infostats.css'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Components/Home';\nimport Nav from './Components/Nav';\nimport Footer from './Components/Footer';\nimport Info from './Components/Info';\nimport Random from './Components/Random';\nimport SortAlphabetically from './Components/SortAlphabetically';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Nav />\n        <div className='content-wrapper'>\n          <Switch>\n            <Route exact path='/pokedex'>\n              <Home />\n            </Route>\n            <Route path='/pokedex/pokemon/:id'>\n              <Info />\n            </Route>\n            <Route path='/random'>\n              <Random />\n            </Route>\n            <Route path='/pokedex/sort/alphabetically'>\n              <SortAlphabetically />\n            </Route>\n          </Switch>\n        </div>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}